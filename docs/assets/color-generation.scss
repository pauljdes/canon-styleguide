@function color-palette($color) {
  $map: (
     light: scale-color($color, $lightness: 94%),
     lighter: adjust-hue(scale-color($color, $lightness: 48%, $saturation: 32%), -8%),
     base: $color,
     darker: adjust-hue(scale-color($color, $lightness: -36%), 0%),
     dark: scale-color($color, $lightness: -72%, $saturation: 100%)
  );
  @return $map;
}

$colors: (
  canon-red: color-palette(#cc0000),
  canon-blue: color-palette(#006fb4),
  canon-green: color-palette(#328538),
  canon-teal: color-palette(#41bdbb),
  canon-purple: color-palette(#5c369e),
  canon-yellow: color-palette(#ecd340)
);

// retrieve color from map ie. `color(primary, base)`
@function color($color-name, $color-variant:null) {
  // color variant is optional
  @if ($color-variant != null) {
    // map inception

    @return map-get(map-get($colors, $color-name), $color-variant);
  } @else {
    @return map-get(map-get($colors, $color-name), base);
  }
}

.c-red-light { background: color(canon-red, light); }
.c-red-lighter { background: color(canon-red, lighter); }
.c-red { background: color(canon-red); }
.c-red-darker { background: color(canon-red, darker); color:#fff;}
.c-red-dark { background: color(canon-red, dark); color:#fff;}

.c-blue-light { background: color(canon-blue, light); }
.c-blue-lighter { background: color(canon-blue, lighter); }
.c-blue { background: color(canon-blue); }
.c-blue-darker { background: color(canon-blue, darker); color:#fff;}
.c-blue-dark { background: color(canon-blue, dark); color:#fff;}

.c-green-light { background: color(canon-green, light); }
.c-green-lighter { background: color(canon-green, lighter); }
.c-green { background: color(canon-green); }
.c-green-darker { background: color(canon-green, darker); color:#fff;}
.c-green-dark { background: color(canon-green, dark); color:#fff;}

.c-teal-light { background: color(canon-teal, light); }
.c-teal-lighter { background: color(canon-teal, lighter); }
.c-teal { background: color(canon-teal); }
.c-teal-darker { background: color(canon-teal, darker); color:#fff;}
.c-teal-dark { background: color(canon-teal, dark); color:#fff;}

.c-purple-light { background: color(canon-purple, light); }
.c-purple-lighter { background: color(canon-purple, lighter); }
.c-purple { background: color(canon-purple); }
.c-purple-darker { background: color(canon-purple, darker); color:#fff;}
.c-purple-dark { background: color(canon-purple, dark); color:#fff;}

.c-yellow-light { background: color(canon-yellow, light); }
.c-yellow-lighter { background: color(canon-yellow, lighter); }
.c-yellow { background: color(canon-yellow); }
.c-yellow-darker { background: color(canon-yellow, darker); color:#fff;}
.c-yellow-dark { background: color(canon-yellow, dark); color:#fff;}


.columns {
  display:flex;
  flex-wrap: wrap;
}
.column {
  display:flex;
  flex-direction: column;
  margin-right: 24px;
}
[class^='c-'] {
  width: 160px;
  display:inline-block;
  padding: 24px;
  i {
    font-family: sans-serif;
    font-size: 16px;
    font-style: normal;
  }
}
